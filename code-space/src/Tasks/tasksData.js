export const tasksData = {
  beginner: [
    {
      id: 1,
      title: "Palindrome Checker",
      description: "Check if a number is a palindrome. A palindrome reads the same backward as forward.",
      input: "121",
      output: "true",
    },
    {
      id: 2,
      title: "Armstrong Number",
      description: "Check if a number is an Armstrong number.",
      input: "153",
      output: "true",
    },
    {
      id: 3,
      title: "Reverse a Number",
      description: "Reverse the digits of a number.",
      input: "1234",
      output: "4321",
    },
    {
      id: 4,
      title: "Sum of Digits",
      description: "Find the sum of digits of a number.",
      input: "1234",
      output: "10",
    },
    {
      id: 5,
      title: "Factorial Finder",
      description: "Find the factorial of a given number.",
      input: "5",
      output: "120",
    },
    {
      id: 6,
      title: "Even or Odd",
      description: "Determine if a number is even or odd.",
      input: "7",
      output: "Odd",
    },
    {
      id: 7,
      title: "Prime Number Checker",
      description: "Check if a number is prime.",
      input: "11",
      output: "true",
    },
    {
      id: 8,
      title: "Fibonacci Series",
      description: "Print the Fibonacci series up to n terms.",
      input: "5",
      output: "0 1 1 2 3",
    },
    {
      id: 9,
      title: "Find Largest Number",
      description: "Find the largest among three numbers.",
      input: "10 20 15",
      output: "20",
    },
    {
      id: 10,
      title: "Count Digits",
      description: "Count the number of digits in a number.",
      input: "12345",
      output: "5",
    },
    {
      id: 11,
      title: "Simple Calculator",
      description: "Perform addition, subtraction, multiplication, and division.",
      input: "5 + 3",
      output: "8",
    },
    {
      id: 12,
      title: "Check Leap Year",
      description: "Check if a year is a leap year.",
      input: "2020",
      output: "true",
    },
    {
      id: 13,
      title: "Sum of Natural Numbers",
      description: "Find the sum of first n natural numbers.",
      input: "10",
      output: "55",
    },
    {
      id: 14,
      title: "Swap Numbers",
      description: "Swap two numbers without using a third variable.",
      input: "5 7",
      output: "7 5",
    },
    {
      id: 15,
      title: "GCD Finder",
      description: "Find the Greatest Common Divisor (GCD) of two numbers.",
      input: "24 36",
      output: "12",
    },
  ],

  intermediate: [
    {
      id: 1,
      title: "Find Duplicate",
      description: "Find duplicate elements in an array.",
      input: "1 2 3 2 4 5",
      output: "2",
    },
    {
      id: 2,
      title: "Second Largest Number",
      description: "Find the second largest number in an array.",
      input: "10 20 4 45 99",
      output: "45",
    },
    {
      id: 3,
      title: "Check Anagram",
      description: "Check if two strings are anagrams.",
      input: "listen silent",
      output: "true",
    },
    {
      id: 4,
      title: "Find Missing Number",
      description: "Find the missing number in an array of 1 to n.",
      input: "1 2 4 5",
      output: "3",
    },
    {
      id: 5,
      title: "Sort Array",
      description: "Sort an array in ascending order.",
      input: "5 2 9 1 5 6",
      output: "1 2 5 5 6 9",
    },
    {
      id: 6,
      title: "Find Common Elements",
      description: "Find common elements in two arrays.",
      input: "1 2 3 4 & 3 4 5 6",
      output: "3 4",
    },
    {
      id: 7,
      title: "Count Vowels",
      description: "Count the number of vowels in a string.",
      input: "hello world",
      output: "3",
    },
    {
      id: 8,
      title: "Find Subarray Sum",
      description: "Find a subarray with a given sum.",
      input: "1 2 3 7 5 sum=12",
      output: "2 3 7",
    },
    {
      id: 9,
      title: "Check Palindrome String",
      description: "Check if a string is a palindrome.",
      input: "madam",
      output: "true",
    },
    {
      id: 10,
      title: "Remove Duplicates",
      description: "Remove duplicates from an array.",
      input: "1 2 2 3 4 4 5",
      output: "1 2 3 4 5",
    },
    {
      id: 11,
      title: "Find Kth Largest Element",
      description: "Find the Kth largest element in an array.",
      input: "3 2 1 5 6 4 k=2",
      output: "5",
    },
    {
      id: 12,
      title: "Merge Two Sorted Arrays",
      description: "Merge two sorted arrays.",
      input: "1 3 5 & 2 4 6",
      output: "1 2 3 4 5 6",
    },
    {
      id: 13,
      title: "Rotate Array",
      description: "Rotate an array by k steps.",
      input: "1 2 3 4 5 k=2",
      output: "4 5 1 2 3",
    },
    {
      id: 14,
      title: "Find Frequency",
      description: "Find the frequency of each element in an array.",
      input: "1 2 2 3 3 3",
      output: "1:1 2:2 3:3",
    },
    {
      id: 15,
      title: "Longest Word",
      description: "Find the longest word in a sentence.",
      input: "I love programming",
      output: "programming",
    },
  ],

  advanced: [
    {
      id: 1,
      title: "Binary Search",
      description: "Implement binary search on a sorted array.",
      input: "1 3 5 7 9 search=5",
      output: "2",
    },
    {
      id: 2,
      title: "N-Queens Problem",
      description: "Solve N-Queens problem using backtracking.",
      input: "4",
      output: "2 solutions",
    },
    {
      id: 3,
      title: "Knapsack Problem",
      description: "Solve 0/1 knapsack problem using DP.",
      input: "weights:1 2 3 values:6 10 12 capacity:5",
      output: "22",
    },
    {
      id: 4,
      title: "Graph BFS Traversal",
      description: "Implement BFS traversal for a graph.",
      input: "Edges: (0,1) (0,2) (1,2) (2,0) (2,3)",
      output: "0 1 2 3",
    },
    {
      id: 5,
      title: "Graph DFS Traversal",
      description: "Implement DFS traversal for a graph.",
      input: "Edges: (0,1) (0,2) (1,2) (2,0) (2,3)",
      output: "0 1 2 3",
    },
    {
      id: 6,
      title: "Find Shortest Path (Dijkstra)",
      description: "Find shortest path in weighted graph using Dijkstra.",
      input: "Edges: (0,1,4) (0,2,1) (2,1,2) (1,3,1)",
      output: "0→2→1→3",
    },
    {
      id: 7,
      title: "Maximum Subarray Sum (Kadane’s)",
      description: "Find maximum sum of contiguous subarray.",
      input: "-2 -3 4 -1 -2 1 5 -3",
      output: "7",
    },
    {
      id: 8,
      title: "Minimum Spanning Tree (Prim’s)",
      description: "Find MST of a connected graph.",
      input: "Weighted edges...",
      output: "Total cost: 7",
    },
    {
      id: 9,
      title: "Word Break Problem",
      description: "Check if a string can be segmented into valid words.",
      input: "s=leetcode dict=[leet, code]",
      output: "true",
    },
    {
      id: 10,
      title: "Sudoku Solver",
      description: "Solve a given Sudoku puzzle.",
      input: "9x9 grid...",
      output: "Solved grid",
    },
    {
      id: 11,
      title: "Count Islands (DFS)",
      description: "Count number of islands in a binary matrix.",
      input: "Grid...",
      output: "3",
    },
    {
      id: 12,
      title: "Topological Sort",
      description: "Perform topological sort on DAG.",
      input: "Edges...",
      output: "Valid order",
    },
    {
      id: 13,
      title: "Find All Paths in Graph",
      description: "Find all paths from source to destination.",
      input: "Graph...",
      output: "Paths: ...",
    },
    {
      id: 14,
      title: "Longest Increasing Subsequence",
      description: "Find length of longest increasing subsequence.",
      input: "10 9 2 5 3 7 101 18",
      output: "4",
    },
    {
      id: 15,
      title: "Matrix Multiplication",
      description: "Perform multiplication of two matrices.",
      input: "Matrix A & B",
      output: "Resultant matrix",
    },
  ],
};
